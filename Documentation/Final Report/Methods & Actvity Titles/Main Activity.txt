Main Activity:

WireUp:

        // list(s) used to populate adapter
        List<NewsObject> newsObjectDisplayList
        List<NewsObject> tempNewsObjectDisplayList 	

	List<string> marketImpact_selectedList
        List<string> currencies_selectedList
        
	public static bool TimeOffsetUpdated { get; set; }

RecyclerView & Adapter

Toolbars (2 methods)


// variables  - alert dialog (x2) - market impact & currencies
string[] - names of options to be selected
bool[] - to store which options are checked / unchecked


DataAccessHelpers.CreateEmptyTable();
DataAccessHelpers.CreateTableForURLDownload();
// Display for last time data was updated - retrieved from Shared Preferences
GetAndDisplayDefaultData();  

----------------
Test Data Stuff
----------------

// bottom ToolBar Menu Selection

mainActivity_bottom_toolbar_option_ClearCurrencyData
mainActivity_bottom_toolbar_option_displayAllCurrencyData
mainActivity_bottom_toolbar_option_selectMarketImpacts
mainActivity_bottom_toolbar_option_selectCurrencies:
mainActivity_bottom_toolbar_option_debugDisplay:
mainActivity_bottom_toolbar_option_sampleData:
mainActivity_bottom_toolbar_option_sampleLinqQuery:



void DebugDisplayCurrencies()
void DebugDisplayMarketImpacts()


private void MAdapter_ItemClick1(object sender, int e)
Intent intent = new Intent(this, typeof(UserAlertsActivity));




public void UpdateXML_Option()
	calls:
		DataAccess.DataAccessHelpers.DownloadNewXMLAndStoreInDatabase();
		DataAccessHelpers.GetAllNewsObjectDataFromDatabase();
		PopulateNewsObjectAdapter();
	        RefreshTxtDataLastUpdated();



 // TOP Toolbar ('menu options')
mainActivity_top_toolbar_option_updateXML:  calls:	UpdateXML_Option();
mainActivity_top_toolbar_option_userAlertsActivity:	calls: (UserAlertsActivity)                   
mainActivity_top_toolbar_option_preferences:		calls: (PreferencesActivity)
mainActivity_top_toolbar_option_reports:		toast (future development)       
mainActivity_top_toolbar_option_alertsOldVersion:
mainActivity_top_toolbar_option_customAdapter:  



void PopulateNewsObjectAdapter()           
Refresh adapter by running a 'forEach' through tempList to repopulate the same DisplayListObect that adapter has memory reference to 

void RefreshTxtDataLastUpdated()
	mySharedPreferencesMethods.GetDataFromSharedPrefs();



void GetAndDisplayDefaultData()
	tempNewsObjectDisplayList = DataAccessHelpers.GetAllNewsObjectDataFromDatabase();
	PopulateNewsObjectAdapter();
        RefreshTxtDataLastUpdated();